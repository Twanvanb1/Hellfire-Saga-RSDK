// ----------------------------------
// RSDK Project: Sonic 2
// Script Description: Title Card Object
// Script Author: Christian Whitehead/Simon Thomley
// Unpacked by Rubberduckycooly's script unpacker
// ----------------------------------

// ========================
// Aliases
// ========================

private alias object.value0 : object.timer
private alias object.value1 : object.actNamePos
private alias object.value2 : object.stagePos
private alias object.value3 : object.displayActName

// States
private alias 0 : TITLECARD_SETUP
private alias 1 : TITLECARD_ENTERTITLECARD
private alias 2 : TITLECARD_

// Types
private alias 0 : TITLECARD_TYPE_ACTNUM
private alias 1 : TITLECARD_TYPE_ACT1
private alias 2 : TITLECARD_TYPE_ACT2
private alias 3 : TITLECARD_TYPE_ACT3
private alias 4 : TITLECARD_TYPE_ZONE
private alias 5 : TITLECARD_TYPE_ZONE_MBZ

private alias 0 : NAME_FDZ
private alias 1 : NAME_SCZ
private alias 2 : NAME_GMZ

// Player Aliases
private alias object.propertyValue	: player.character
private alias object.controlMode 	: player.controlMode
private alias object.jumpPress 	 	: player.jumpPress
private alias object.jumpHold 	 	: player.jumpHold
private alias object.up 		 	: player.up
private alias object.down 		 	: player.down
private alias object.left 		 	: player.left
private alias object.right 		 	: player.right
private alias object.value1 	 	: player.timer

// Tracks
private alias 0 : TRACK_STAGE

// ========================
// Function Declarations
// ========================

// ========================
// Static Values
// ========================

// Determines whether the act results will say got through zone or got through act [num]
public value TitleCard_showZoneText = 0


// ========================
// Function Definitions
// ========================

// ========================
// Events
// ========================


event ObjectUpdate
	options.touchControls = false

	switch object.state
	case TITLECARD_SETUP
		object.alpha  = 0xFF
		object.actNamePos = screen.xsize
		object.actNamePos += 512
		object.stagePos = object.actNamePos
		PlayMusic(TRACK_STAGE)

		object.timer = 64
		//currentPlayer = 0
		//while currentPlayer < playerCount
			player[currentPlayer].controlMode = CONTROLMODE_P1
		//	currentPlayer++
		//loop
		object.state++
		break

	case TITLECARD_ENTERTITLECARD
		temp0 = screen.xcenter
		temp0 -= 128
		if object.actNamePos > screen.xcenter
			object.actNamePos -= 16
		else
			if object.stagePos > screen.xcenter
				object.stagePos -= 16
			else
				object.alpha -= 8
				stage.state = STAGE_RUNNING
				if object.alpha <= 0
					object.timer = 0
					stage.timeEnabled = true
					object.state++
				end if
			end if
		end if		
		break

	case 2
		if object.timer < 60
			object.actNamePos += 16
			temp0 = screen.xcenter
			temp0 += 64
			if object.actNamePos > temp0
				object.stagePos += 16
			end if
			object.timer++
		else
			object.timer = 0
			object.state++
		end if
		break
	case 3
		if object.timer < 20
			object.timer++
		else
			object.timer = 0
			object.type = TypeName[Blank Object]
		end if
		break
	end switch
end event


event ObjectDraw
	DrawRect(0, 0, screen.xsize, screen.ysize, 0, 0, 0, object.alpha)
	temp0 = screen.ycenter
	temp0 -= 28

	switch stage.listPos
	case 0
	case 1
	case 2
	case 3
		object.displayActName = NAME_FDZ
		break
	case 4
	case 5
	case 6
	case 7
		object.displayActName = NAME_SCZ
		break
	case 8
	case 9
	case 10
	case 11
		object.displayActName = NAME_GMZ
		break
	end switch
	object.displayActName += 5
	DrawSpriteScreenXY(object.displayActName, object.actNamePos, temp0)
	//DrawActName(6, object.actNamePos, temp0, 0, false, 16, 0)
	

	temp0 = screen.ycenter
	temp0 += 4
	DrawSpriteScreenXY(4, object.stagePos, temp0)
	
	temp0 += 32
	temp1 = stage.actnum
	temp1 -= 1
	DrawSpriteScreenXY(temp1, object.stagePos, temp0)
end event


event ObjectStartup
	LoadSpriteSheet("Global/TitleCard.gif")
	SpriteFrame(-6, -16, 12, 32, 1, 1)		//  #0 - Number 1
	SpriteFrame(-14, -16, 28, 32, 14, 1)	//  #1 - Number 2
	SpriteFrame(-16, -16, 32, 32, 43, 1)	//  #2 - Number 3
	SpriteFrame(-16, -16, 32, 32, 76, 1) 	//  #3 - Number 4

	SpriteFrame(-20, -4, 40, 8, 109, 1) 	// 	# 4 - Stage Text

	SpriteFrame(-112, -16, 224, 32, 1, 34)
	SpriteFrame(-54, -15, 108, 30, 52, 100) 
	SpriteFrame(-124, -15, 249, 30, 1, 133) 

	SpriteFrame(-8, -16, 16, 32, 1, 67)		// A
	SpriteFrame(0, 0, 0, 0, 0, 0)	//B
	SpriteFrame(-8, -16, 16, 32, 18, 67) 	//C
	SpriteFrame(-8, -16, 16, 32, 35, 67)	//D
	SpriteFrame(-8, -16, 16, 32, 52, 67) 	//E
	SpriteFrame(-8, -16, 16, 32, 69, 67) 	//F
	SpriteFrame(-8, -16, 16, 32, 86, 67) 	//G
	SpriteFrame(0, 0, 0, 0, 0, 0)			//H
	SpriteFrame(-8, -16, 16, 32, 103, 67) 	//I
	SpriteFrame(0, 0, 0, 0, 0, 0)			//J
	SpriteFrame(0, 0, 0, 0, 0, 0)			//K
	SpriteFrame(-8, -16, 16, 32, 120, 67) 	//L
	SpriteFrame(-12, -16, 24, 32, 137, 67) 	//M
	SpriteFrame(-8, -16, 16, 32, 162, 67) 	//N
	SpriteFrame(-8, -16, 16, 32, 179, 67) 	//O
	SpriteFrame(0, 0, 0, 0, 0, 0)			//P
	SpriteFrame(0, 0, 0, 0, 0, 0)			//Q
	SpriteFrame(-8, -16, 16, 32, 196, 67) 	//R
	SpriteFrame(-8, -16, 16, 32, 213, 67) 	//S
	SpriteFrame(-8, -16, 16, 32, 230, 67) 	//T
	SpriteFrame(-8, -16, 16, 32, 1, 100) 	//U
	SpriteFrame(-8, -16, 16, 32, 18, 100) 	//V
	SpriteFrame(0, 0, 0, 0, 0, 0)			//W
	SpriteFrame(0, 0, 0, 0, 0, 0)			//X
	SpriteFrame(-8, -16, 16, 32, 35, 100) 	//Y
	SpriteFrame(0, 0, 0, 0, 0, 0)			//Z
	

	// Title card frames
	if options.vsMode == true
		CallNativeFunction2(ReceiveEntity, 0x400, true)
		ResetObjectEntity(0x400, TypeName[Blank Object], 0, 0, 0)
	end if

	// Cycle through all Title Card objects
	// (Dunno why a regular foreach isn't used here, but sure...)
	arrayPos0 = 32
	while arrayPos0 < 0x420
		if object[arrayPos0].type == TypeName[Title Card]
			object[arrayPos0].priority 	= PRIORITY_ALWAYS
			object[arrayPos0].alpha 	= 0xFF
			object[arrayPos0].drawOrder = 6
			stage.state = STAGE_PAUSED
		end if

		arrayPos0++
	loop
end event


// ========================
// Editor Events
// ========================

event RSDKEdit
	if editor.returnVariable == true
		switch editor.variableID
		case EDIT_VAR_PROPVAL // property value
			checkResult = object.propertyValue
			break
			
		case 0 // actType
			checkResult = object.propertyValue
			break
			
		end switch
	else
		switch editor.variableID
		case EDIT_VAR_PROPVAL // property value
			object.propertyValue = editor.variableValue
			break
			
		case 0 // actType
			object.propertyValue = editor.variableValue
			break
			
		end switch
	end if
end event


event RSDKDraw
	DrawSprite(0)
end event


event RSDKLoad
	LoadSpriteSheet("Global/Display.gif")
	SpriteFrame(-8, -8, 16, 16, 168, 18)

	AddEditorVariable("actType")
	SetActiveVariable("actType")
	AddEnumVariable("Use Act Num", TITLECARD_TYPE_ACTNUM)
	AddEnumVariable("Show Act 1", TITLECARD_TYPE_ACT1)
	AddEnumVariable("Show Act 2", TITLECARD_TYPE_ACT2)
	AddEnumVariable("Show Act 3", TITLECARD_TYPE_ACT3)
	AddEnumVariable("Show Zone Text", TITLECARD_TYPE_ZONE)
	AddEnumVariable("Show Zone Text (MBZ)", TITLECARD_TYPE_ZONE_MBZ)
end event
