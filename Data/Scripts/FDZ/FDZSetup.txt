// ----------------------------------
// RSDK Project:  Sonic 2:Advanced Edit
// Script Description:    FDZ Setup Object 
// Script Author: Twanvanb1
// ----------------------------------

// ========================
// Aliases
// ========================


private alias object.value0 : object.paletteTimer

// Tracks
private alias 0 : TRACK_STAGE
private alias 1 : TRACK_ACTFINISH
private alias 2 : TRACK_INVINCIBLE
private alias 3 : TRACK_CONTINUE
private alias 4 : TRACK_BOSS
private alias 5 : TRACK_GAMEOVER
private alias 6 : TRACK_DROWNING
private alias 7 : TRACK_SUPER

// Reserved Object Slots Aliases
private alias 10 : SLOT_ZONESETUP
private alias 25 : SLOT_MUSICEVENT_CHANGE
private alias 26 : SLOT_MUSICEVENT_BOSS

// Music Events
private alias 0 : MUSICEVENT_FADETOBOSS
private alias 1 : MUSICEVENT_FADETOSTAGE
private alias 2 : MUSICEVENT_TRANSITION

private alias 0 : MUSICEVENT_FLAG_NOCHANGE
private alias 1 : MUSICEVENT_FLAG_SPEEDUP
private alias 2 : MUSICEVENT_FLAG_SLOWDOWN

// Music Loops

private alias 152750 : MUSIC_LOOP_FDZ
private alias 122240 : MUSIC_LOOP_FDZ_F

private alias 38679  : MUSIC_LOOP_INV
private alias 30897  : MUSIC_LOOP_INV_F

// Deformation Layer
private alias 2	:	DEFORM_BG

// ========================
// Function Declarations
// ========================

reserve function FDZSetup_SpeedUpMusic
reserve function FDZSetup_SlowDownMusic
reserve function FDZSetup_InitSonicPal
reserve function FDZSetup_InitSonicRainPal

// ========================
// Static Values
// ========================

// ========================
// Tables
// ========================

public table FDZSetup_SonicPal
	0xFF00FF, 0xe0e0e0, 0x6080c0, 0x4040a0, 0x002060, 0x400000, 0x800000, 0xe02000, 0xe0a000, 0xe08000, 0xe0a0a0, 0xa04060, 0xa0c0e0, 0xa0a0c0, 0x606080, 0x000000
end table

public table FDZSetup_SonicRainPal
	0xFF00FF, 0xe0e0e0, 0x4060c0, 0x2020a0, 0x200060, 0x200020, 0x600020, 0xc02020, 0xc08000, 0xc06000, 0xc080a0, 0x804060, 0xc0c0e0, 0xa0a0c0, 0x6060a0, 0x000000
end table

// ========================
// Function Definitions
// ========================

private function FDZSetup_InitSonicPal
	temp1 = Player_superBlendClr
	temp2 = 0
	while temp2 < 16
		GetTableValue(temp0, temp1, FDZSetup_SonicPal)
		SetPaletteEntry(0, temp2, temp0)
		temp1++
		temp2++
	loop
end function

private function FDZSetup_InitSonicRainPal
	temp1 = Player_superBlendClr
	temp2 = 0
	while temp2 < 16
		GetTableValue(temp0, temp1, FDZSetup_SonicRainPal)
		SetPaletteEntry(0, temp2, temp0)
		temp1++
		temp2++
	loop
end function

private function FDZSetup_SpeedUpMusic
	CheckEqual(object[SLOT_MUSICEVENT_CHANGE].type, TypeName[Music Event])
	temp0 = checkResult
	CheckEqual(object[SLOT_MUSICEVENT_CHANGE].propertyValue, MUSICEVENT_TRANSITION)
	temp0 &= checkResult
	CheckEqual(stage.musicFlag, MUSICEVENT_FLAG_NOCHANGE)
	temp0 &= checkResult
	if temp0 == 0
		switch music.currentTrack
		case TRACK_STAGE
			SetMusicTrack("Invincibility_F.ogg", TRACK_INVINCIBLE, MUSIC_LOOP_INV_F)
			SwapMusicTrack("EmeraldHill_F.ogg", TRACK_STAGE, MUSIC_LOOP_FDZ_F, 8000)
			break

		case TRACK_INVINCIBLE
			SetMusicTrack("EmeraldHill_F.ogg", TRACK_STAGE, MUSIC_LOOP_FDZ_F)
			SwapMusicTrack("Invincibility_F.ogg", TRACK_INVINCIBLE, MUSIC_LOOP_INV_F, 8000)
			break

		case TRACK_BOSS
		case TRACK_DROWNING
		case TRACK_SUPER
			SetMusicTrack("EmeraldHill_F.ogg", TRACK_STAGE, MUSIC_LOOP_FDZ_F)
			SetMusicTrack("Invincibility_F.ogg", TRACK_INVINCIBLE, MUSIC_LOOP_INV_F)
			break

		end switch
	else
		stage.musicFlag = MUSICEVENT_FLAG_SPEEDUP
	end if
end function

private function FDZSetup_SlowDownMusic
	CheckEqual(object[SLOT_MUSICEVENT_CHANGE].type, TypeName[Music Event])
	temp0 = checkResult
	CheckEqual(object[SLOT_MUSICEVENT_CHANGE].propertyValue, MUSICEVENT_TRANSITION)
	temp0 &= checkResult
	CheckEqual(stage.musicFlag, MUSICEVENT_FLAG_NOCHANGE)
	temp0 &= checkResult
	if temp0 == 0
		switch music.currentTrack
		case TRACK_STAGE
			SetMusicTrack("Invincibility.ogg", TRACK_INVINCIBLE, MUSIC_LOOP_INV)
			SwapMusicTrack("EmeraldHill.ogg", TRACK_STAGE, MUSIC_LOOP_FDZ, 12500)
			break

		case TRACK_INVINCIBLE
			SetMusicTrack("EmeraldHill.ogg", TRACK_STAGE, MUSIC_LOOP_FDZ)
			SwapMusicTrack("Invincibility.ogg", TRACK_INVINCIBLE, MUSIC_LOOP_INV, 12500)
			break

		case TRACK_BOSS
		case TRACK_DROWNING
		case TRACK_SUPER
			SetMusicTrack("EmeraldHill.ogg", TRACK_STAGE, MUSIC_LOOP_FDZ)
			SetMusicTrack("Invincibility.ogg", TRACK_INVINCIBLE, MUSIC_LOOP_INV)
			break

		end switch
	else
		stage.musicFlag = MUSICEVENT_FLAG_SLOWDOWN
	end if
end function

// ========================
// Events
// ========================

event ObjectUpdate
end event

event ObjectDraw
end event

event ObjectStartup
	SetMusicTrack("EmeraldHill.ogg", TRACK_STAGE, MUSIC_LOOP_FDZ)

	SpeedUpMusic = FDZSetup_SpeedUpMusic
	SlowDownMusic = FDZSetup_SlowDownMusic

	animalType1 = TypeName[Flicky]
	animalType2 = TypeName[Ricky]

	if stage.actnum > 2
		CallFunction(FDZSetup_InitSonicRainPal)
	else
		CallFunction(FDZSetup_InitSonicPal)
	end if

	object[SLOT_ZONESETUP].type = TypeName[FDZ Setup]
	object[SLOT_ZONESETUP].priority = PRIORITY_ACTIVE

end event

// ========================
// Editor Events
// ========================

event RSDKDraw
  DrawSprite(0)
end event

event RSDKLoad
  LoadSpriteSheet("Global/Display.gif")
  SpriteFrame(-16, -16, 32, 32, 1, 143)

  SetVariableAlias(ALIAS_VAR_PROPVAL, "Does this work?")
end event
